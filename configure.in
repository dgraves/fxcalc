dnl Process this file with autoconf to produce a configure script.
AC_INIT(include/CALCWindow.h)
AM_INIT_AUTOMAKE(fxcalc,1.0.9)

dnl Checks for programs.
AC_PROG_MAKE_SET
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_RANLIB

dnl Checks for the FOX reswrap utility
AC_CHECK_PROG(RESWRAP,reswrap,reswrap)
if test -z "$RESWRAP"; then
  AC_MSG_ERROR("FOX reswrap utility not found")
fi

dnl Checks for libraries.
dnl AC_CHECK_LIB(m,main)
dnl AC_HAVE_LIBRARY(m)
dnl Fix this one of these days
LIBS="${LIBS} -lm"

dnl Check for doubledouble
AC_ARG_ENABLE(doubledouble,
[  --disable-doubledouble  compile wothout doubledouble support],
[AC_MSG_RESULT(disabeling doubledouble)],
[AC_DEFINE(HAVE_DOUBLEDOUBLE)
 AC_DEFINE(DD_INLINE)
 AC_CHECK_FUNCS(isinf finite)
 if (uname -m) 2>&1 | egrep 'i*86' > /dev/null ; then
    AC_DEFINE(x86)
 fi
 CPPFLAGS="${CPPFLAGS} -I../doubledouble"
 LIBS="-L../doubledouble ${LIBS} -ldoubledouble"])

dnl Check for FOX
dnl AC_CHECK_LIB(FOX,fxfindfox,,AC_MSG_ERROR("libFOX not found"))
LIBS="${LIBS} -lFOX"

dnl Checks for header files.
AC_HEADER_STDC

AC_CHECK_HEADERS(fox/fx.h,,AC_MSG_ERROR("fox/fx.h not found"))

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_C_LONG_DOUBLE

AC_MSG_CHECKING(for int64_t)
AC_CACHE_VAL(ac_cv_int64_t,
 [AC_TRY_COMPILE([#include<stdio.h>
                  #include<sys/types.h>],
                  [int64_t foo=0;],
                  [ac_cv_int64_t=true],
                  [ac_cv_int64_t=false])])
if test "$ac_cv_int64_t" = true ; then
  AC_DEFINE(HAVE_INT64_T)
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(for uint64_t)
AC_CACHE_VAL(ac_cv_uint64_t,
 [AC_TRY_COMPILE([#include<stdio.h>
                  #include<sys/types.h>],
                  [uint64_t foo=0;],
                  [ac_cv_uint64_t=true],
                  [ac_cv_uint64_t=false])])
if test "$ac_cv_uint64_t" = true ; then
  AC_DEFINE(HAVE_UINT64_T)
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
  AC_MSG_CHECKING(for u_int64_t)
  AC_CACHE_VAL(ac_cv_u_int64_t,
  [ AC_TRY_COMPILE([#include<stdio.h>
                    #include<sys/types.h>],
                    [u_int64_t foo=0;],
                    [ac_cv_u_int64_t=true],
                    [ac_cv_u_int64_t=false])])
  if test "$ac_cv_u_int64_t" = true ; then
    AC_DEFINE(HAVE_U_INT64_T)
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
  fi
fi

dnl See about RTTI
AC_ARG_ENABLE(rtti,
[  --disable-rtti          compile without rtti support],
[AC_MSG_RESULT(disabeling rtti)],
[AC_DEFINE(HAVE_RTTI)])

dnl Checks for library functions.
AC_MSG_CHECKING(for asinh)
AC_CACHE_VAL(ac_cv_asinh,
 [AC_TRY_COMPILE([#include<math.h>],
                  [asinh(0.0);],
                  [ac_cv_asinh=true],
                  [ac_cv_asinh=false])])
if test "$ac_cv_asinh" = true ; then
  AC_DEFINE(HAVE_ASINH)
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(for acosh)
AC_CACHE_VAL(ac_cv_acosh,
 [AC_TRY_COMPILE([#include<math.h>],
                  [acosh(0.0);],
                  [ac_cv_acosh=true],
                  [ac_cv_acosh=false])])
if test "$ac_cv_acosh" = true ; then
  AC_DEFINE(HAVE_ACOSH)
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(for atanh)
AC_CACHE_VAL(ac_cv_atanh,
 [AC_TRY_COMPILE([#include<math.h>],
                  [atanh(0.0);],
                  [ac_cv_atanh=true],
                  [ac_cv_atanh=false])])
if test "$ac_cv_atanh" = true ; then
  AC_DEFINE(HAVE_ATANH)
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi

AC_OUTPUT(Makefile doubledouble/Makefile include/Makefile src/Makefile windows/Makefile include/CALCdefs.h)
